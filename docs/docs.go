// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/token": {
            "post": {
                "description": "Generate a JWT token using the master password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate authentication token",
                "parameters": [
                    {
                        "description": "Token request with master password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token generated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid master password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/links": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new short link for a URL, optionally with a custom alias",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Create a new short link",
                "parameters": [
                    {
                        "description": "Link creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateShortLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Link created successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.ShortLink"
                        }
                    },
                    "400": {
                        "description": "Invalid request or URL",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/links/{code}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a short link using its code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Get a short link by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short link code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link details",
                        "schema": {
                            "$ref": "#/definitions/domain.ShortLink"
                        }
                    },
                    "400": {
                        "description": "Invalid code",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update properties of an existing short link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Update a short link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short link code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateShortLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated link",
                        "schema": {
                            "$ref": "#/definitions/domain.ShortLink"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a short link by its code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Delete a short link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short link code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid code",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/links/{code}/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get usage statistics for a short link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Get link statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short link code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link statistics",
                        "schema": {
                            "$ref": "#/definitions/domain.LinkStats"
                        }
                    },
                    "400": {
                        "description": "Invalid code",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateShortLinkRequest": {
            "type": "object",
            "properties": {
                "custom_alias": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "domain.LinkClick": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "short_link_id": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "domain.LinkStats": {
            "type": "object",
            "properties": {
                "clicks_by_day": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "last_clicked": {
                    "type": "string"
                },
                "recent_clicks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.LinkClick"
                    }
                },
                "top_browsers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "top_devices": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "top_os": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "top_referrers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "total_clicks": {
                    "type": "integer"
                }
            }
        },
        "domain.ShortLink": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_alias": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "description": "Embedded URL information when fetching a short link",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.URL"
                        }
                    ]
                },
                "url_id": {
                    "type": "string"
                }
            }
        },
        "domain.URL": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateShortLinkRequest": {
            "type": "object",
            "properties": {
                "custom_alias": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "handlers.TokenRequest": {
            "type": "object",
            "required": [
                "master_password"
            ],
            "properties": {
                "master_password": {
                    "type": "string",
                    "example": "your_master_password"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter 'Bearer ' followed by your JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "r.menezmethod.com",
	BasePath:         "/api",
	Schemes:          []string{"http", "https"},
	Title:            "URL Shortener API",
	Description:      "A RESTful API for shortening URLs with analytics.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
