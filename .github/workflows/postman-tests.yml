name: Postman API Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  postman-tests:
    name: Run Postman Collection Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Newman
      run: npm install -g newman newman-reporter-htmlextra

    # Set up Docker Compose
    - name: Set up Docker Compose
      uses: isbang/compose-action@v1.5.1

    - name: Create .env.dev file for Docker Compose
      run: |
        cat > .env.dev << EOL
        # API Configuration
        PORT=8081
        BASE_URL=http://localhost:8081
        ENVIRONMENT=test
        
        # PostgreSQL Configuration
        POSTGRES_HOST=postgres
        POSTGRES_PORT=5432
        POSTGRES_USER=postgres
        POSTGRES_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }}
        POSTGRES_DB=url_shortener_test
        
        # Auth Configuration
        MASTER_PASSWORD=${{ secrets.TEST_MASTER_PASSWORD }}
        JWT_SECRET=${{ secrets.TEST_JWT_SECRET }}
        JWT_EXPIRATION=24h
        
        # Redis Configuration (optional)
        REDIS_HOST=redis
        REDIS_PORT=6379
        REDIS_PASSWORD=
        EOL

    - name: Start services with Docker Compose
      run: |
        docker compose --env-file .env.dev build
        docker compose --env-file .env.dev up -d
        
        # Wait for services to be ready
        echo "Waiting for services to start..."
        sleep 15
        
        # Debug output
        echo "Docker Compose services status:"
        docker compose ps
        echo "Container logs:"
        docker compose logs --tail=20

    - name: Create Newman environment file
      run: |
        # Extract master password from .env.dev for logging purposes
        MASTER_PASSWORD=$(grep -E "^MASTER_PASSWORD=" .env.dev | cut -d'=' -f2)
        echo "Creating Newman environment file with master password from .env.dev: $MASTER_PASSWORD"
        
        cat > newman-environment.json << EOL
        {
          "name": "URL_Shortener_API_CI_Environment",
          "values": [
            {
              "key": "baseUrl",
              "value": "http://localhost:8081",
              "enabled": true
            },
            {
              "key": "apiPath",
              "value": "api",
              "enabled": true
            },
            {
              "key": "masterPassword",
              "value": "devpassword",
              "enabled": true
            }
          ]
        }
        EOL

    - name: Run Postman collection tests
      run: |
        newman run ./postman/collections/master_collection.json \
          -e newman-environment.json \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export postman-results.html \
          --bail

    - name: Upload Postman test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: postman-test-results
        path: postman-results.html
        
    - name: Stop Docker Compose services
      if: always()
      run: docker compose down 