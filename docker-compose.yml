services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-8081}:8081"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-url_shortener}
      - MASTER_PASSWORD=${MASTER_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-notice}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-60}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - READ_TIMEOUT=${READ_TIMEOUT:-30s}
      - WRITE_TIMEOUT=${WRITE_TIMEOUT:-30s}
      - IDLE_TIMEOUT=${IDLE_TIMEOUT:-120s}
      - POSTGRES_MAX_CONNECTIONS=${POSTGRES_MAX_CONNECTIONS:-25}
      - POSTGRES_MAX_IDLE_CONNECTIONS=${POSTGRES_MAX_IDLE_CONNECTIONS:-5}
      - POSTGRES_CONN_MAX_LIFETIME=${POSTGRES_CONN_MAX_LIFETIME:-15m}
      - SHORTLINK_DEFAULT_EXPIRY=${SHORTLINK_DEFAULT_EXPIRY:-30d}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - url-shortener

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-url_shortener}
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - url-shortener

networks:
  url-shortener:
    driver: bridge

volumes:
  postgres_data:

# Specify which .env file to use
# For local development: docker-compose --env-file .env.dev up
# For production: docker-compose up (will use .env by default) 